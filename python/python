#---------------------------------------------------------
# shebang
#!/usr/bin/env python3

#---------------------------------------------------------
# Documentation
# pip :
http://apprendre-python.com/page-pip-installer-librairies-automatiquement

# virtualenv :
http://apprendre-python.com/page-virtualenv-python-environnement-virtuel


#=============================================================================#
# STRING                                                                      #
#=============================================================================#


#---------------------------------------------------------
# String Format Examples
# https://www.python-course.eu/python3_formatted_output.php
# https://pyformat.info/

"First argument: {0}, second one: {1}".format(47,11) 
'First argument: 47, second one: 11'

"Art: {a:5d},  Price: {p:8.2f}".format(a=453, p=59.058)
'Art:   453,  Price:    59.06'

"{0:>20s} {1:6.2f}".format('Spam & Eggs:', 6.99)
'        Spam & Eggs:   6.99'

#---------------------------------------------------------
# Most elegant way to check if the string is empty
if not myString:

#---------------------------------------------------------
# Print 'n' chars
print('-' * 3)


#=============================================================================#
# OTHERS                                                                      #
#=============================================================================#

# Manage dry-run quick and dirty
#!/usr/bin/env python3
import sys
DRY_RUN = 1 if ( len(sys.argv) == 2 and sys.argv[1] == '--dry-run' ) else 0
print(DRY_RUN)

#---------------------------------------------------------
# Run a command with pipe getting stdout
import subprocess
p = subprocess.run("date | cut -d' ' -f2", shell=True, stdout=subprocess.PIPE)
print(p.stdout.decode('UTF-8'))

#---------------------------------------------------------
# Parse Args
import sys
print('Number of arguments:', len(sys.argv), 'arguments.')
print('Argument List:', str(sys.argv))
print('Process:', str(sys.argv[0]))

#---------------------------------------------------------
# read stdin (rstrip = chomp = trimmed = remove last 'blank' char)
import sys
for line in sys.stdin:   
    print(line.rstrip())

#---------------------------------------------------------
# Python: about catching ANY exception
# https://stackoverflow.com/questions/4990718/python-about-catching-any-exception
import traceback
import logging
try:
    whatever()
except Exception as e:
    logging.error(traceback.format_exc())
    # Logs the error appropriately. 

#---------------------------------------------------------
# Diff time
from datetime import datetime
start = datetime.now()
print(datetime.now() - start)
-> 0:00:00.894091

#---------------------------------------------------------
# Read a file
token=open("/home/user/token", "r").read()

#---------------------------------------------------------
# Write a file
token=open("/home/user/token", "w").write("string")

#---------------------------------------------------------
# Create directory if not exists
import os
if not os.path.exists(directory):
    os.mkdir(directory)

#---------------------------------------------------------
# Functional programming
 >>> [ x * x for x in range(10) if x % 2 ]
 [1, 9, 25, 49, 81]

#---------------------------------------------------------
# Parse JSON
# https://docs.python.org/fr/3/library/json.html
>>> import json
>>> json.loads('{"buildDate": "2018-06-05T09:35:40Z","currentVersion": "1.0.0","metadata": {"timestamp": "2018-06-19T09:04:24Z","version": "1.0.0"}}')['buildDate']
u'2018-06-05T09:35:40Z'

#---------------------------------------------------------
# Returns the current filename and the current line number in our program
def func_line():
    return inspect.currentframe().f_back.f_code.co_name + "@" + str(inspect.currentframe().f_back.f_lineno)

#---------------------------------------------------------
# Compare two dictionnaries
shared_items = {k: x[k] for k in x if k in y and x[k] == y[k]}
print(len(shared_items))

#---------------------------------------------------------
# Random
import random
random.random()
random.randrange(2)
random.sample([1,2,3],2)

